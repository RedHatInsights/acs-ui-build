{"version":3,"file":"js/InstanceDetailsPage.f1f03dae8ad6187043cd.js","mappings":"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","sources":["webpack:///./src/components/BreadcrumbItemLink.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack:///./src/components/InstanceDetailsList.js","webpack:///./src/components/RegionLabel.js","webpack:///./src/hooks/apis/useApi.js","webpack:///./src/hooks/apis/useCloudRegions.js","webpack:///./src/hooks/apis/useInstance.js","webpack:///./node_modules/@patternfly/react-tokens/dist/esm/global_danger_color_100.js","webpack:///./src/components/NotFoundMessage.tsx","webpack:///./src/routes/InstanceDetailsPage/InstanceDetailsPage.js","webpack:///./src/utils/cloudProvider.js","webpack:///./src/utils/date.js","webpack:///./src/utils/queryString.js","webpack:///./src/utils/region.js","webpack:///./src/components/AppLink.tsx"],"sourcesContent":["/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { BreadcrumbItem } from '@patternfly/react-core';\nimport AppLink from '../components/AppLink';\n\nfunction BreadcrumbItemLink({ children, to, ...rest }) {\n  function render({ className, ariaCurrent }) {\n    return (\n      <AppLink className={className} aria-current={ariaCurrent} to={to}>\n        {children}\n      </AppLink>\n    );\n  }\n  return <BreadcrumbItem {...rest} render={render} />;\n}\n\nexport default BreadcrumbItemLink;\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport {\n  ClipboardCopy,\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n} from '@patternfly/react-core';\n\nimport { getDateTime } from '../utils/date';\nimport { cloudProviderValueToLabel } from '../utils/cloudProvider';\nimport RegionLabel from './RegionLabel';\n\nfunction InstanceDetailsList({ instance }) {\n  return (\n    <DescriptionList isHorizontal>\n      <DescriptionListGroup>\n        <DescriptionListTerm>Cloud provider</DescriptionListTerm>\n        <DescriptionListDescription>\n          {cloudProviderValueToLabel(instance.cloud_provider)}\n        </DescriptionListDescription>\n      </DescriptionListGroup>\n      <DescriptionListGroup>\n        <DescriptionListTerm>Region</DescriptionListTerm>\n        <DescriptionListDescription>\n          <RegionLabel id={instance.region} />\n        </DescriptionListDescription>\n      </DescriptionListGroup>\n      <DescriptionListGroup>\n        <DescriptionListTerm>ID</DescriptionListTerm>\n        <DescriptionListDescription>\n          <ClipboardCopy\n            hoverTip=\"Copy\"\n            clickTip=\"Copied\"\n            variant=\"inline-compact\"\n          >\n            {instance.id}\n          </ClipboardCopy>\n        </DescriptionListDescription>\n      </DescriptionListGroup>\n      <DescriptionListGroup>\n        <DescriptionListTerm>Owner</DescriptionListTerm>\n        <DescriptionListDescription>\n          {instance.owner}\n        </DescriptionListDescription>\n      </DescriptionListGroup>\n      <DescriptionListGroup>\n        <DescriptionListTerm>Time created</DescriptionListTerm>\n        <DescriptionListDescription>\n          {getDateTime(instance.created_at)}\n        </DescriptionListDescription>\n      </DescriptionListGroup>\n      <DescriptionListGroup>\n        <DescriptionListTerm>Time updated</DescriptionListTerm>\n        <DescriptionListDescription>\n          {getDateTime(instance.updated_at)}\n        </DescriptionListDescription>\n      </DescriptionListGroup>\n      <DescriptionListGroup>\n        <DescriptionListTerm>\n          Central API endpoint (Sensor mTLS)\n        </DescriptionListTerm>\n        <DescriptionListDescription>\n          <ClipboardCopy\n            hoverTip=\"Copy\"\n            clickTip=\"Copied\"\n            variant=\"inline-compact\"\n          >\n            {instance.centralDataURL || '-'}\n          </ClipboardCopy>\n        </DescriptionListDescription>\n      </DescriptionListGroup>\n      <DescriptionListGroup>\n        <DescriptionListTerm>Central instance (UI, roxctl)</DescriptionListTerm>\n        <DescriptionListDescription>\n          <ClipboardCopy\n            hoverTip=\"Copy\"\n            clickTip=\"Copied\"\n            variant=\"inline-compact\"\n          >\n            {instance.centralUIURL || '-'}\n          </ClipboardCopy>\n        </DescriptionListDescription>\n      </DescriptionListGroup>\n    </DescriptionList>\n  );\n}\n\nexport default InstanceDetailsList;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { useCloudRegions } from '../hooks/apis/useCloudRegions';\nimport { useMemo } from 'react';\nimport { AWS_PROVIDER } from '../utils/cloudProvider';\nimport { getRegionDisplayName } from '../utils/region';\n\nexport default function RegionLabel({ id }) {\n  const { data: regionList } = useCloudRegions({ provider: AWS_PROVIDER });\n  const region = useMemo(() => {\n    return regionList?.items.find((r) => r.id === id);\n  }, [regionList, id]);\n  return <span>{region ? getRegionDisplayName(region) : id}</span>;\n}\n","import { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\n\nimport axios from 'axios';\n\nconst API_PROD_URL = 'https://api.openshift.com';\nconst API_STAGE_URL = 'https://api.stage.openshift.com';\nconst API_INTEGRATION_URL = 'https://api.integration.openshift.com';\n\nexport default function useApi() {\n  const { isProd, isBeta } = useChrome();\n  let apiUrl = API_STAGE_URL;\n  if (isProd()) {\n    apiUrl = API_PROD_URL;\n  } else if (isBeta()) {\n    apiUrl = API_INTEGRATION_URL;\n  }\n  const authInterceptor = (client) => {\n    client.interceptors.request.use(async (cfg) => {\n      await insights.chrome.auth.getUser();\n      const token = await insights.chrome.auth.getToken();\n      const BASE_URL = cfg.baseURL || apiUrl;\n      const updatedCfg = { ...cfg, url: `${BASE_URL}${cfg.url}` };\n      if (token) {\n        updatedCfg.headers = {\n          ...updatedCfg.headers,\n          Authorization: `Bearer ${token}`,\n        };\n      }\n      delete updatedCfg.customHost;\n      return updatedCfg;\n    });\n    return client;\n  };\n  return authInterceptor(axios.create());\n}\n","import { useQuery } from 'react-query';\n\nimport { getQueryString } from '../../utils/queryString';\nimport useApi from './useApi';\n\nexport const queryKey = (query) => ['cloud_regions', query];\n\nconst getCloudRegions = async (apiRequest, { provider, instanceType }) => {\n  const queryString = getQueryString({ instance_type: instanceType });\n  const { data } = await apiRequest.get(\n    `/api/rhacs/v1/cloud_providers/${provider}/regions?${queryString}`\n  );\n  return data;\n};\n\nexport const useCloudRegions = (query, options) => {\n  const apiRequest = useApi();\n  return useQuery(queryKey(query), () => getCloudRegions(apiRequest, query), {\n    // Those regions are not going to change very often, so we can cache them for a long time.\n    // Worst case, a good old browser refresh will fix an outdated region list.\n    staleTime: Infinity,\n    ...options,\n  });\n};\n","import { useQuery } from 'react-query';\n\nimport useApi from './useApi';\n\nconst getInstanceById = async (apiRequest, instanceId) => {\n  const { data } = await apiRequest.get(`/api/rhacs/v1/centrals/${instanceId}`);\n  return data;\n};\n\nexport default function useInstance(instanceId) {\n  const apiRequest = useApi();\n  return useQuery(['instance', instanceId], () =>\n    getInstanceById(apiRequest, instanceId)\n  );\n}\n","export const global_danger_color_100 = {\n  \"name\": \"--pf-global--danger-color--100\",\n  \"value\": \"#c9190b\",\n  \"var\": \"var(--pf-global--danger-color--100)\"\n};\nexport default global_danger_color_100;","import React from 'react';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons/';\nimport { global_danger_color_100 as dangerColor } from '@patternfly/react-tokens';\nimport {\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateProps,\n  EmptyStateVariant,\n  Stack,\n  StackItem,\n  Title,\n} from '@patternfly/react-core';\n\nimport AppLink from './AppLink';\n\nexport interface NotFoundMessageProps\n  extends Omit<EmptyStateProps, 'children'> {\n  errorTitle?: string;\n  errorDescription?: React.ReactNode;\n  url: string;\n  actionText: string;\n}\n\nconst NotFoundMessage: React.FunctionComponent<NotFoundMessageProps> = ({\n  errorTitle,\n  errorDescription,\n  url,\n  actionText,\n  ...props\n}) => {\n  return (\n    <EmptyState variant={EmptyStateVariant.large} {...props}>\n      <EmptyStateIcon icon={ExclamationCircleIcon} color={dangerColor.value} />\n      <Title headingLevel=\"h4\" size=\"lg\">\n        {errorTitle}\n      </Title>\n      <EmptyStateBody>\n        <Stack>\n          <StackItem>{errorDescription}</StackItem>\n        </Stack>\n      </EmptyStateBody>\n      <Button component={(props) => <AppLink {...props} to={url} />}>\n        {actionText}\n      </Button>\n    </EmptyState>\n  );\n};\n\nexport default NotFoundMessage;\n","import React from 'react';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport { useParams } from 'react-router-dom';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Bullseye,\n  Button,\n  ButtonVariant,\n  Card,\n  CardBody,\n  CardHeader,\n  CardHeaderMain,\n  CardTitle,\n  Flex,\n  FlexItem,\n  Grid,\n  GridItem,\n  List,\n  ListItem,\n  PageSection,\n  PageSectionVariants,\n  Spinner,\n  Title,\n} from '@patternfly/react-core';\nimport BreadcrumbItemLink from '../../components/BreadcrumbItemLink';\nimport useInstance from '../../hooks/apis/useInstance';\nimport InstanceDetailsList from '../../components/InstanceDetailsList';\n\nimport NotFoundMessage from '../../components/NotFoundMessage';\n\nfunction InstanceDetailsPage() {\n  const { instanceId } = useParams();\n  const { data: instance, isFetching, isError } = useInstance(instanceId);\n\n  if (isFetching) {\n    return (\n      <Bullseye>\n        <Spinner />\n      </Bullseye>\n    );\n  }\n\n  if (isError) {\n    return (\n      <NotFoundMessage\n        errorTitle=\"Instance Not Found\"\n        actionText=\"Go to ACS Instances page\"\n        errorDescription=\"The URL may be incorrect, you may not have permission to view that instance, or that instance no longer exists. Try using the ACS Instances page to find what you are looking for.\"\n        url=\"instances\"\n      />\n    );\n  }\n\n  return (\n    <div>\n      <PageHeader>\n        <Flex direction={{ default: 'column' }}>\n          <FlexItem>\n            <Breadcrumb>\n              <BreadcrumbItemLink to=\"/instances\">\n                ACS instances\n              </BreadcrumbItemLink>\n              <BreadcrumbItem isActive>{instance.name}</BreadcrumbItem>\n            </Breadcrumb>\n          </FlexItem>\n          <FlexItem>\n            <PageHeaderTitle title={instance.name} />\n          </FlexItem>\n        </Flex>\n      </PageHeader>\n      <Main className=\"pf-u-p-0 pf-m-fill pf-m-overflow-scroll\">\n        <PageSection>\n          <Flex alignItems={{ default: 'alignItemsStretch' }}>\n            <FlexItem\n              flex={{ default: 'flex_1' }}\n              alignSelf={{ default: 'alignSelfStretch' }}\n            >\n              <Card className=\"pf-u-h-100\">\n                <CardHeader>\n                  <CardHeaderMain>\n                    <CardTitle>ACS Instance Access</CardTitle>\n                  </CardHeaderMain>\n                </CardHeader>\n                <CardBody>\n                  <Flex direction={{ default: 'column' }}>\n                    <FlexItem>\n                      Get started by signing in to your ACS instance.\n                    </FlexItem>\n                    <FlexItem>\n                      <Button\n                        variant={ButtonVariant.primary}\n                        component=\"a\"\n                        href={instance.centralUIURL}\n                        isDisabled={!instance.centralUIURL}\n                        target=\"_blank\"\n                      >\n                        Open ACS Console\n                      </Button>\n                    </FlexItem>\n                  </Flex>\n                </CardBody>\n              </Card>\n            </FlexItem>\n            <FlexItem flex={{ default: 'flex_1' }}>\n              <Card>\n                <CardHeader>\n                  <CardHeaderMain>\n                    <CardTitle>Instance Details</CardTitle>\n                  </CardHeaderMain>\n                </CardHeader>\n                <CardBody>\n                  <InstanceDetailsList instance={instance} />\n                </CardBody>\n              </Card>\n            </FlexItem>\n          </Flex>\n        </PageSection>\n        <PageSection\n          variant={PageSectionVariants.light}\n          isFilled\n          hasOverflowScroll\n          isWidthLimited\n        >\n          <Title headingLevel=\"h2\">\n            Use Red Hat ACS to secure your clusters\n          </Title>\n          <Grid hasGutter>\n            <GridItem md={7}>\n              <Card className=\"marketing-video\">\n                <iframe\n                  src=\"https://www.youtube.com/embed/lFBFW3HmgsA\"\n                  title=\"Advanced Cluster Security in 2 Minutes\"\n                  frameBorder=\"0\"\n                  allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                  allowFullScreen\n                ></iframe>\n              </Card>\n            </GridItem>\n            <GridItem md={5} hasGutter>\n              <List isPlain>\n                <ListItem>\n                  <Button\n                    variant=\"link\"\n                    isInline\n                    component=\"a\"\n                    href=\"https://www.redhat.com/sysadmin/kubernetes-RHACS-red-hat-advanced-cluster-security\"\n                    target=\"_blank\"\n                  >\n                    Getting Started Guide\n                  </Button>\n                </ListItem>\n                <ListItem>\n                  <Button\n                    variant=\"link\"\n                    isInline\n                    component=\"a\"\n                    href=\"https://docs.openshift.com/acs/3.71/welcome/index.html\"\n                    target=\"_blank\"\n                  >\n                    Product Configuration\n                  </Button>\n                </ListItem>\n              </List>\n            </GridItem>\n          </Grid>\n        </PageSection>\n      </Main>\n    </div>\n  );\n}\n\nexport default InstanceDetailsPage;\n","export const AWS_PROVIDER = 'aws';\nexport const AWS_DEFAULT_REGION = 'us-east-1';\n\nconst cloudProviders = {\n  [AWS_PROVIDER]: 'Amazon Web Services',\n};\n\nconst cloudProvidersShortForm = {\n  [AWS_PROVIDER]: 'AWS',\n};\n\nexport const cloudProviderOptions = Object.keys(cloudProviders).map(\n  (cloudProviderValue) => {\n    return {\n      value: cloudProviderValue,\n      label: cloudProviders[cloudProviderValue],\n    };\n  }\n);\n\nexport function cloudProviderValueToLabel(cloudProviderValue) {\n  return cloudProvidersShortForm[cloudProviderValue]\n    ? `Hosted by Red Hat (on ${cloudProvidersShortForm[cloudProviderValue]})`\n    : 'Hosted by Red Hat';\n}\n\nexport function cloudProviderLabelToValue(cloudProviderLabel) {\n  const cloudProviderOption = cloudProviderOptions.find(\n    (cloudProviderOption) => cloudProviderOption.label === cloudProviderLabel\n  );\n  return cloudProviderOption?.value;\n}\n","import { format, formatDistance, parseISO } from 'date-fns';\n\nconst dateTimeFormat = 'MM/dd/yyyy | h:mm:ss a';\n\nexport function getDateTimeDifference(timestamp) {\n  return formatDistance(parseISO(timestamp), new Date(), {\n    addSuffix: true,\n  });\n}\n\nexport function getDateTime(timestamp) {\n  return format(parseISO(timestamp), dateTimeFormat);\n}\n","import qs from 'qs';\n\nexport function getQueryObject(search) {\n  return qs.parse(search, { ignoreQueryPrefix: true });\n}\n\nexport function getQueryString(searchObject) {\n  return qs.stringify(searchObject, { encode: false });\n}\n","export function regionLabelToValue(regionLabel, regionList) {\n  const regionOption = regionList?.find((region) => region.id === regionLabel);\n  return regionOption?.id;\n}\n\nexport function getRegionDisplayName(region) {\n  if (!region) {\n    return '';\n  }\n  return region.display_name || region.id;\n}\n","import React from 'react';\nimport { Link, LinkProps } from 'react-router-dom';\nimport { linkBasename, mergeToBasename } from '../utils/paths';\n\nconst AppLink = (props: LinkProps) => (\n  <Link {...props} to={mergeToBasename(props.to, linkBasename)} />\n);\n\nexport default AppLink;\n"],"names":["_ref","children","to","rest","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","_objectWithoutProperties","_excluded","React","BreadcrumbItem","_extends","render","_ref2","className","ariaCurrent","AppLink","instance","DescriptionList","isHorizontal","DescriptionListGroup","DescriptionListTerm","DescriptionListDescription","cloudProviderValueToLabel","cloud_provider","RegionLabel","id","region","ClipboardCopy","hoverTip","clickTip","variant","owner","getDateTime","created_at","updated_at","centralDataURL","centralUIURL","regionList","useCloudRegions","provider","AWS_PROVIDER","data","useMemo","items","find","r","getRegionDisplayName","useApi","client","_useChrome","useChrome","isProd","isBeta","apiUrl","axios","interceptors","request","use","_asyncToGenerator","_regeneratorRuntime","_callee","cfg","token","BASE_URL","updatedCfg","_context","prev","next","insights","chrome","auth","getUser","getToken","sent","baseURL","_objectSpread","url","concat","headers","Authorization","customHost","abrupt","stop","_x","apply","arguments","getCloudRegions","apiRequest","instanceType","queryString","_yield$apiRequest$get","getQueryString","instance_type","get","_x2","query","options","useQuery","queryKey","staleTime","Infinity","getInstanceById","instanceId","global_danger_color_100","errorTitle","errorDescription","actionText","props","EmptyState","EmptyStateVariant","EmptyStateIcon","icon","color","Title","headingLevel","size","EmptyStateBody","Stack","StackItem","Button","component","_useInstance","useParams","isFetching","isError","Bullseye","Spinner","NotFoundMessage","PageHeader","Flex","direction","default","FlexItem","Breadcrumb","BreadcrumbItemLink","isActive","name","PageHeaderTitle","title","Main","PageSection","alignItems","flex","alignSelf","Card","CardHeader","CardHeaderMain","CardTitle","CardBody","ButtonVariant","href","isDisabled","InstanceDetailsList","PageSectionVariants","isFilled","hasOverflowScroll","isWidthLimited","Grid","hasGutter","GridItem","md","src","frameBorder","allow","allowFullScreen","List","isPlain","ListItem","isInline","AWS_DEFAULT_REGION","cloudProviders","_defineProperty","cloudProvidersShortForm","cloudProviderOptions","map","cloudProviderValue","value","label","cloudProviderLabelToValue","cloudProviderLabel","cloudProviderOption","getDateTimeDifference","timestamp","formatDistance","parseISO","Date","addSuffix","format","searchObject","qs","encode","regionLabelToValue","regionLabel","regionOption","display_name","Link"],"sourceRoot":""}