{"version":3,"file":"js/InstanceDetailsPage.a416182a4c59a346018e.js","mappings":"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","sources":["webpack:///./src/components/InstanceDetailsList.js","webpack:///./src/components/RegionLabel.js","webpack:///./src/hooks/apis/useCloudRegions.js","webpack:///./src/components/AppLink.tsx","webpack:///./src/components/BreadcrumbItemLink.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack:///./src/hooks/apis/useInstance.js","webpack:///./src/routes/InstanceDetailsPage/InstanceDetailsPage.js","webpack:///./src/services/apiRequest.js","webpack:///./src/utils/cloudProvider.js","webpack:///./src/utils/date.js","webpack:///./src/utils/queryString.js","webpack:///./src/utils/region.js"],"sourcesContent":["/* eslint-disable react/prop-types */\nimport React from 'react';\nimport {\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n} from '@patternfly/react-core';\n\nimport { getDateTime } from '../utils/date';\nimport { cloudProviderValueToLabel } from '../utils/cloudProvider';\nimport RegionLabel from './RegionLabel';\n\nfunction InstanceDetailsList({ instance }) {\n  return (\n    <DescriptionList isHorizontal>\n      <DescriptionListGroup>\n        <DescriptionListTerm>Cloud provider</DescriptionListTerm>\n        <DescriptionListDescription>\n          {cloudProviderValueToLabel(instance.cloud_provider)}\n        </DescriptionListDescription>\n      </DescriptionListGroup>\n      <DescriptionListGroup>\n        <DescriptionListTerm>Region</DescriptionListTerm>\n        <DescriptionListDescription>\n          <RegionLabel id={instance.region} />\n        </DescriptionListDescription>\n      </DescriptionListGroup>\n      <DescriptionListGroup>\n        <DescriptionListTerm>ID</DescriptionListTerm>\n        <DescriptionListDescription>{instance.id}</DescriptionListDescription>\n      </DescriptionListGroup>\n      <DescriptionListGroup>\n        <DescriptionListTerm>Owner</DescriptionListTerm>\n        <DescriptionListDescription>\n          {instance.owner}\n        </DescriptionListDescription>\n      </DescriptionListGroup>\n      <DescriptionListGroup>\n        <DescriptionListTerm>Time created</DescriptionListTerm>\n        <DescriptionListDescription>\n          {getDateTime(instance.created_at)}\n        </DescriptionListDescription>\n      </DescriptionListGroup>\n      <DescriptionListGroup>\n        <DescriptionListTerm>Time updated</DescriptionListTerm>\n        <DescriptionListDescription>\n          {getDateTime(instance.updated_at)}\n        </DescriptionListDescription>\n      </DescriptionListGroup>\n      <DescriptionListGroup>\n        <DescriptionListTerm>\n          Central API endpoint (Sensor mTLS)\n        </DescriptionListTerm>\n        <DescriptionListDescription>\n          {instance.centralDataURL || '-'}\n        </DescriptionListDescription>\n      </DescriptionListGroup>\n      <DescriptionListGroup>\n        <DescriptionListTerm>Central instance (UI, roxctl)</DescriptionListTerm>\n        <DescriptionListDescription>\n          {instance.centralUIURL || '-'}\n        </DescriptionListDescription>\n      </DescriptionListGroup>\n    </DescriptionList>\n  );\n}\n\nexport default InstanceDetailsList;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { useCloudRegions } from '../hooks/apis/useCloudRegions';\nimport { useMemo } from 'react';\nimport { AWS_PROVIDER } from '../utils/cloudProvider';\nimport { getRegionDisplayName } from '../utils/region';\n\nexport default function RegionLabel({ id }) {\n  const { data: regionList } = useCloudRegions({ provider: AWS_PROVIDER });\n  const region = useMemo(() => {\n    return regionList?.items.find((r) => r.id === id);\n  }, [regionList, id]);\n  return <span>{region ? getRegionDisplayName(region) : id}</span>;\n}\n","import { useQuery } from 'react-query';\n\nimport apiRequest from '../../services/apiRequest';\nimport { getQueryString } from '../../utils/queryString';\n\nexport const queryKey = (query) => ['cloud_regions', query];\n\nconst getCloudRegions = async ({ provider, instanceType }) => {\n  const queryString = getQueryString({ instance_type: instanceType });\n  const { data } = await apiRequest.get(\n    `/api/rhacs/v1/cloud_providers/${provider}/regions?${queryString}`\n  );\n  return data;\n};\n\nexport const useCloudRegions = (query, options) => {\n  return useQuery(queryKey(query), () => getCloudRegions(query), {\n    // Those regions are not going to change very often, so we can cache them for a long time.\n    // Worst case, a good old browser refresh will fix an outdated region list.\n    staleTime: Infinity,\n    ...options,\n  });\n};\n","import React from 'react';\nimport { Link, LinkProps } from 'react-router-dom';\nimport { linkBasename, mergeToBasename } from '../utils/paths';\n\nconst AppLink = (props: LinkProps) => (\n  <Link {...props} to={mergeToBasename(props.to, linkBasename)} />\n);\n\nexport default AppLink;\n","/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { BreadcrumbItem } from '@patternfly/react-core';\nimport AppLink from '../components/AppLink';\n\nfunction BreadcrumbItemLink({ children, to, ...rest }) {\n  function render({ className, ariaCurrent }) {\n    return (\n      <AppLink className={className} aria-current={ariaCurrent} to={to}>\n        {children}\n      </AppLink>\n    );\n  }\n  return <BreadcrumbItem {...rest} render={render} />;\n}\n\nexport default BreadcrumbItemLink;\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { useQuery } from 'react-query';\n\nimport apiRequest from '../../services/apiRequest';\n\nconst getInstanceById = async (instanceId) => {\n  const { data } = await apiRequest.get(`/api/rhacs/v1/centrals/${instanceId}`);\n  return data;\n};\n\nexport default function useInstance(instanceId) {\n  return useQuery(['instance', instanceId], () => getInstanceById(instanceId));\n}\n","import React from 'react';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport { useParams } from 'react-router-dom';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Bullseye,\n  Button,\n  ButtonVariant,\n  Card,\n  CardBody,\n  CardHeader,\n  CardHeaderMain,\n  CardTitle,\n  Flex,\n  FlexItem,\n  Grid,\n  GridItem,\n  List,\n  ListItem,\n  PageSection,\n  PageSectionVariants,\n  Spinner,\n  Title,\n} from '@patternfly/react-core';\nimport BreadcrumbItemLink from '../../components/BreadcrumbItemLink';\nimport useInstance from '../../hooks/apis/useInstance';\nimport InstanceDetailsList from '../../components/InstanceDetailsList';\n\nfunction InstanceDetailsPage() {\n  const { instanceId } = useParams();\n  const { data: instance, isFetching } = useInstance(instanceId);\n\n  if (isFetching) {\n    return (\n      <Bullseye>\n        <Spinner />\n      </Bullseye>\n    );\n  }\n\n  return (\n    <div>\n      <PageHeader>\n        <Flex direction={{ default: 'column' }}>\n          <FlexItem>\n            <Breadcrumb>\n              <BreadcrumbItemLink to=\"/instances\">\n                ACS instances\n              </BreadcrumbItemLink>\n              <BreadcrumbItem isActive>{instance.name}</BreadcrumbItem>\n            </Breadcrumb>\n          </FlexItem>\n          <FlexItem>\n            <PageHeaderTitle title={instance.name} />\n          </FlexItem>\n        </Flex>\n      </PageHeader>\n      <Main className=\"pf-u-p-0 pf-m-fill pf-m-overflow-scroll\">\n        <PageSection>\n          <Flex alignItems={{ default: 'alignItemsStretch' }}>\n            <FlexItem\n              flex={{ default: 'flex_1' }}\n              alignSelf={{ default: 'alignSelfStretch' }}\n            >\n              <Card className=\"pf-u-h-100\">\n                <CardHeader>\n                  <CardHeaderMain>\n                    <CardTitle>ACS Instance Access</CardTitle>\n                  </CardHeaderMain>\n                </CardHeader>\n                <CardBody>\n                  <Flex direction={{ default: 'column' }}>\n                    <FlexItem>\n                      Get started by signing in to your ACS instance.\n                    </FlexItem>\n                    <FlexItem>\n                      <Button\n                        variant={ButtonVariant.primary}\n                        component=\"a\"\n                        href={instance.centralUIURL}\n                        isDisabled={!instance.centralUIURL}\n                        target=\"_blank\"\n                      >\n                        Open ACS Console\n                      </Button>\n                    </FlexItem>\n                  </Flex>\n                </CardBody>\n              </Card>\n            </FlexItem>\n            <FlexItem flex={{ default: 'flex_1' }}>\n              <Card>\n                <CardHeader>\n                  <CardHeaderMain>\n                    <CardTitle>Instance Details</CardTitle>\n                  </CardHeaderMain>\n                </CardHeader>\n                <CardBody>\n                  <InstanceDetailsList instance={instance} />\n                </CardBody>\n              </Card>\n            </FlexItem>\n          </Flex>\n        </PageSection>\n        <PageSection\n          variant={PageSectionVariants.light}\n          isFilled\n          hasOverflowScroll\n          isWidthLimited\n        >\n          <Title headingLevel=\"h2\">\n            Use Red Hat ACS to secure your clusters\n          </Title>\n          <Grid hasGutter>\n            <GridItem md={7}>\n              <Card className=\"marketing-video\">\n                <iframe\n                  src=\"https://www.youtube.com/embed/lFBFW3HmgsA\"\n                  title=\"Advanced Cluster Security in 2 Minutes\"\n                  frameBorder=\"0\"\n                  allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                  allowFullScreen\n                ></iframe>\n              </Card>\n            </GridItem>\n            <GridItem md={5} hasGutter>\n              <List isPlain>\n                <ListItem>\n                  <Button\n                    variant=\"link\"\n                    isInline\n                    component=\"a\"\n                    href=\"https://www.redhat.com/sysadmin/kubernetes-RHACS-red-hat-advanced-cluster-security\"\n                    target=\"_blank\"\n                  >\n                    Getting Started Guide\n                  </Button>\n                </ListItem>\n                <ListItem>\n                  <Button\n                    variant=\"link\"\n                    isInline\n                    component=\"a\"\n                    href=\"https://docs.openshift.com/acs/3.71/welcome/index.html\"\n                    target=\"_blank\"\n                  >\n                    Product Configuration\n                  </Button>\n                </ListItem>\n              </List>\n            </GridItem>\n          </Grid>\n        </PageSection>\n      </Main>\n    </div>\n  );\n}\n\nexport default InstanceDetailsPage;\n","import axios from 'axios';\n\nconst API_URL = process?.env?.PROD\n  ? 'https://api.openshift.com'\n  : 'https://api.stage.openshift.com';\n\nexport const authInterceptor = (client) => {\n  client.interceptors.request.use(async (cfg) => {\n    await insights.chrome.auth.getUser();\n    const token = await insights.chrome.auth.getToken();\n    const BASE_URL = cfg.baseURL || API_URL;\n    const updatedCfg = { ...cfg, url: `${BASE_URL}${cfg.url}` };\n    if (token) {\n      updatedCfg.headers = {\n        ...updatedCfg.headers,\n        Authorization: `Bearer ${token}`,\n      };\n    }\n    delete updatedCfg.customHost;\n    return updatedCfg;\n  });\n  return client;\n};\n\nconst apiRequest = authInterceptor(axios.create());\n\nexport default apiRequest;\n","export const AWS_PROVIDER = 'aws';\nexport const AWS_DEFAULT_REGION = 'us-east-1';\n\nconst cloudProviders = {\n  [AWS_PROVIDER]: 'Amazon Web Services',\n};\n\nconst cloudProvidersShortForm = {\n  [AWS_PROVIDER]: 'AWS',\n};\n\nexport const cloudProviderOptions = Object.keys(cloudProviders).map(\n  (cloudProviderValue) => {\n    return {\n      value: cloudProviderValue,\n      label: cloudProviders[cloudProviderValue],\n    };\n  }\n);\n\nexport function cloudProviderValueToLabel(cloudProviderValue) {\n  return cloudProvidersShortForm[cloudProviderValue]\n    ? `Hosted by Red Hat (on ${cloudProvidersShortForm[cloudProviderValue]})`\n    : 'Hosted by Red Hat';\n}\n\nexport function cloudProviderLabelToValue(cloudProviderLabel) {\n  const cloudProviderOption = cloudProviderOptions.find(\n    (cloudProviderOption) => cloudProviderOption.label === cloudProviderLabel\n  );\n  return cloudProviderOption?.value;\n}\n","import { format, formatDistance, parseISO } from 'date-fns';\n\nconst dateTimeFormat = 'MM/dd/yyyy | h:mm:ss a';\n\nexport function getDateTimeDifference(timestamp) {\n  return formatDistance(parseISO(timestamp), new Date(), {\n    addSuffix: true,\n  });\n}\n\nexport function getDateTime(timestamp) {\n  return format(parseISO(timestamp), dateTimeFormat);\n}\n","import qs from 'qs';\n\nexport function getQueryObject(search) {\n  return qs.parse(search, { ignoreQueryPrefix: true });\n}\n\nexport function getQueryString(searchObject) {\n  return qs.stringify(searchObject, { encode: false });\n}\n","export function regionLabelToValue(regionLabel, regionList) {\n  const regionOption = regionList?.find((region) =>\n    getRegionDisplayName(region).startsWith(regionLabel)\n  );\n  return regionOption?.id;\n}\n\nexport function getRegionDisplayName(region) {\n  if (!region) {\n    return '';\n  }\n  return region.display_name || region.id;\n}\n"],"names":["_ref","instance","React","DescriptionList","isHorizontal","DescriptionListGroup","DescriptionListTerm","DescriptionListDescription","cloudProviderValueToLabel","cloud_provider","RegionLabel","id","region","owner","getDateTime","created_at","updated_at","centralDataURL","centralUIURL","regionList","useCloudRegions","provider","AWS_PROVIDER","data","useMemo","items","find","r","getRegionDisplayName","getCloudRegions","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","instanceType","queryString","_yield$apiRequest$get","_context","prev","next","getQueryString","instance_type","apiRequest","concat","sent","abrupt","stop","_x","apply","arguments","query","options","useQuery","queryKey","_objectSpread","staleTime","Infinity","props","Link","to","children","rest","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","_objectWithoutProperties","_excluded","BreadcrumbItem","_extends","render","className","ariaCurrent","AppLink","getInstanceById","instanceId","_useInstance","useParams","isFetching","Bullseye","Spinner","PageHeader","Flex","direction","default","FlexItem","Breadcrumb","BreadcrumbItemLink","isActive","name","PageHeaderTitle","title","Main","PageSection","alignItems","flex","alignSelf","Card","CardHeader","CardHeaderMain","CardTitle","CardBody","Button","variant","ButtonVariant","component","href","isDisabled","InstanceDetailsList","PageSectionVariants","isFilled","hasOverflowScroll","isWidthLimited","Title","headingLevel","Grid","hasGutter","GridItem","md","src","frameBorder","allow","allowFullScreen","List","isPlain","ListItem","isInline","client","API_URL","_process","process","_process$env","env","axios","interceptors","request","use","cfg","token","BASE_URL","updatedCfg","insights","chrome","auth","getUser","getToken","baseURL","url","headers","Authorization","customHost","AWS_DEFAULT_REGION","cloudProviders","_defineProperty","cloudProvidersShortForm","cloudProviderOptions","map","cloudProviderValue","value","label","cloudProviderLabelToValue","cloudProviderLabel","cloudProviderOption","getDateTimeDifference","timestamp","formatDistance","parseISO","Date","addSuffix","format","searchObject","qs","encode","regionLabelToValue","regionLabel","regionOption","startsWith","display_name"],"sourceRoot":""}