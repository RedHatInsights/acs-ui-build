{"version":3,"file":"js/GettingStartedPage.30dfc4271a862c256b29.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/js/createIcon.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/external-link-alt-icon.js","webpack:///./src/components/BreadcrumbItemLink.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack:///./src/routes/GettingStartedPage/Wizard/HeaderExternalLink.js","webpack:///./src/routes/GettingStartedPage/Wizard/InitialSetup.js","webpack:///./src/routes/GettingStartedPage/Wizard/InstallOptions.js","webpack:///./src/routes/GettingStartedPage/Wizard/Finish.js","webpack:///./src/routes/GettingStartedPage/Wizard/InstallWithHelm.js","webpack:///./src/routes/GettingStartedPage/Wizard/InstallWithOperator.js","webpack:///./src/routes/GettingStartedPage/Wizard/GettingStartedWizard.js","webpack:///./src/routes/GettingStartedPage/GettingStartedPage.js","webpack:///./src/components/AppLink.tsx","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack:///./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createIcon = exports.getSize = exports.IconSize = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nvar IconSize;\n(function (IconSize) {\n    IconSize[\"sm\"] = \"sm\";\n    IconSize[\"md\"] = \"md\";\n    IconSize[\"lg\"] = \"lg\";\n    IconSize[\"xl\"] = \"xl\";\n})(IconSize = exports.IconSize || (exports.IconSize = {}));\nconst getSize = (size) => {\n    switch (size) {\n        case IconSize.sm:\n            return '1em';\n        case IconSize.md:\n            return '1.5em';\n        case IconSize.lg:\n            return '2em';\n        case IconSize.xl:\n            return '3em';\n        default:\n            return '1em';\n    }\n};\nexports.getSize = getSize;\nlet currentId = 0;\n/**\n * Factory to create Icon class components for consumers\n */\nfunction createIcon({ name, xOffset = 0, yOffset = 0, width, height, svgPath }) {\n    var _a;\n    return _a = class SVGIcon extends React.Component {\n            constructor() {\n                super(...arguments);\n                this.id = `icon-title-${currentId++}`;\n            }\n            render() {\n                const _a = this.props, { size, color, title, noVerticalAlign } = _a, props = tslib_1.__rest(_a, [\"size\", \"color\", \"title\", \"noVerticalAlign\"]);\n                const hasTitle = Boolean(title);\n                const heightWidth = (0, exports.getSize)(size);\n                const baseAlign = -0.125 * Number.parseFloat(heightWidth);\n                const style = noVerticalAlign ? null : { verticalAlign: `${baseAlign}em` };\n                const viewBox = [xOffset, yOffset, width, height].join(' ');\n                return (React.createElement(\"svg\", Object.assign({ style: style, fill: color, height: heightWidth, width: heightWidth, viewBox: viewBox, \"aria-labelledby\": hasTitle ? this.id : null, \"aria-hidden\": hasTitle ? null : true, role: \"img\" }, props),\n                    hasTitle && React.createElement(\"title\", { id: this.id }, title),\n                    React.createElement(\"path\", { d: svgPath })));\n            }\n        },\n        _a.displayName = name,\n        _a.defaultProps = {\n            color: 'currentColor',\n            size: IconSize.sm,\n            noVerticalAlign: false\n        },\n        _a;\n}\nexports.createIcon = createIcon;\n//# sourceMappingURL=createIcon.js.map","\"use strict\"\nexports.__esModule = true;\nexports.ExternalLinkAltIconConfig = {\n  name: 'ExternalLinkAltIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.ExternalLinkAltIcon = require('../createIcon').createIcon(exports.ExternalLinkAltIconConfig);\nexports[\"default\"] = exports.ExternalLinkAltIcon;","/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { BreadcrumbItem } from '@patternfly/react-core';\nimport AppLink from '../components/AppLink';\n\nfunction BreadcrumbItemLink({ children, to, ...rest }) {\n  function render({ className, ariaCurrent }) {\n    return (\n      <AppLink className={className} aria-current={ariaCurrent} to={to}>\n        {children}\n      </AppLink>\n    );\n  }\n  return <BreadcrumbItem {...rest} render={render} />;\n}\n\nexport default BreadcrumbItemLink;\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\n\nconst HeaderExternalLink = () => {\n  return (\n    <Button\n      component=\"a\"\n      variant=\"link\"\n      icon={<ExternalLinkAltIcon />}\n      iconPosition=\"right\"\n      isInline\n      href=\"https://docs.openshift.com/acs/3.74/installing/getting-started-rhacs-cloud-ocp.html\"\n      target=\"_blank\"\n      aria-label=\"Help with ACS setup\"\n    >\n      Help with ACS setup\n    </Button>\n  );\n};\n\nexport default HeaderExternalLink;\n","import React from 'react';\nimport {\n  Button,\n  Flex,\n  FlexItem,\n  Grid,\n  GridItem,\n  List,\n  ListComponent,\n  ListItem,\n  OrderType,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title,\n} from '@patternfly/react-core';\n\nimport AppLink from '../../../components/AppLink';\nimport HeaderExternalLink from './HeaderExternalLink';\n\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\n\nconst InitialSetup = () => {\n  return (\n    <Stack hasGutter>\n      <StackItem>\n        <Flex justifyContent={{ default: 'justifyContentSpaceBetween' }}>\n          <FlexItem>\n            <Title headingLevel=\"h1\">Initial Setup</Title>\n          </FlexItem>\n          <FlexItem>\n            <HeaderExternalLink />\n          </FlexItem>\n        </Flex>\n      </StackItem>\n      <StackItem>\n        <Grid hasGutter>\n          <GridItem sm={2} xl2={1}>\n            <TextContent>\n              <Text component={TextVariants.h3}>Step 1:</Text>\n            </TextContent>\n          </GridItem>\n          <GridItem sm={10} xl2={11}>\n            <TextContent>\n              <Text component={TextVariants.h3}>Create an ACS Instance</Text>\n            </TextContent>\n            <Button\n              variant=\"secondary\"\n              icon={<ExternalLinkAltIcon />}\n              iconPosition=\"right\"\n              className=\"pf-u-my-md\"\n              component={(props) => <AppLink {...props} to={'instances'} />}\n              aria-label=\"Create Instance\"\n              rel=\"noopener noreferrer nofollow\"\n              target=\"_blank\"\n            >\n              Create Instance\n            </Button>\n            <List component={ListComponent.ol} type={OrderType.number}>\n              <ListItem>Choose a name for your instance.</ListItem>\n              <ListItem>\n                Follow the rest of the guidelines and click{' '}\n                <span className=\"pf-u-font-weight-bold\">Create Instance</span>.\n                <br />\n                It will take about 10 minutes to spin up your instance.\n              </ListItem>\n            </List>\n          </GridItem>\n\n          <GridItem sm={2} xl2={1}>\n            <TextContent>\n              <Text component={TextVariants.h3}>Step 2:</Text>\n            </TextContent>\n          </GridItem>\n          <GridItem sm={10} xl2={11}>\n            <TextContent className=\"pf-u-mb-sm\">\n              <Text component={TextVariants.h3}>\n                Access the ACS Central Interface\n              </Text>\n            </TextContent>\n            <List component={ListComponent.ol} type={OrderType.number}>\n              <ListItem>\n                When your instance is in the{' '}\n                <span className=\"pf-u-font-weight-bold\">ready</span> status,\n                click the name for details.\n              </ListItem>\n              <ListItem>\n                Click the{' '}\n                <span className=\"pf-u-font-weight-bold\">Open ACS Console</span>{' '}\n                button.\n              </ListItem>\n              <ListItem>Sign in using your Red Hat credentials.</ListItem>\n            </List>\n          </GridItem>\n        </Grid>\n      </StackItem>\n    </Stack>\n  );\n};\n\nexport default InitialSetup;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport {\n  Flex,\n  FlexItem,\n  Radio,\n  Select,\n  SelectOption,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextVariants,\n  Title,\n} from '@patternfly/react-core';\n\nimport HeaderExternalLink from './HeaderExternalLink';\n\nimport { WIZARD_ID } from './GettingStartedWizard';\n\nconst OPENSHIFT = 'openshift';\nconst EKS = 'eks';\nconst AKS = 'aks';\nconst GKE = 'gke';\nconst OPERATOR = 'operator';\nconst HELM = 'helm';\n\nconst InstallOptions = ({\n  selectedEnv,\n  handleSelectedEnvChange,\n  selectedInstallation,\n  handleInstallationChange,\n}) => {\n  const [isSelectOpen, setIsSelectOpen] = React.useState(false);\n\n  const options = [\n    ...(selectedEnv === OPENSHIFT\n      ? [\n          <SelectOption key={0} value={OPERATOR}>\n            Operator (recommended)\n          </SelectOption>,\n        ]\n      : []),\n    <SelectOption key={1} value={HELM}>\n      Helm\n    </SelectOption>,\n  ];\n\n  const handleChange = (_, e) => {\n    handleSelectedEnvChange(e.target.value);\n    if (e.target.value != OPENSHIFT) {\n      handleInstallationChange(HELM);\n    } else {\n      handleInstallationChange(OPERATOR);\n    }\n  };\n\n  const onInstallationMethodSelect = (_, selection) => {\n    setIsSelectOpen(false);\n    handleInstallationChange(selection);\n  };\n\n  const onToggleSelect = () => {\n    setIsSelectOpen((prev) => !prev);\n  };\n\n  return (\n    <Stack hasGutter>\n      <StackItem>\n        <Flex justifyContent={{ default: 'justifyContentSpaceBetween' }}>\n          <FlexItem>\n            <Title headingLevel=\"h1\">Installation Options</Title>\n          </FlexItem>\n          <FlexItem>\n            <HeaderExternalLink />\n          </FlexItem>\n        </Flex>\n      </StackItem>\n      <StackItem>\n        <TextContent>\n          <Text component={TextVariants.h3}>Select your environment</Text>\n        </TextContent>\n        <Radio\n          label=\"OpenShift\"\n          id={`radio-environment-${OPENSHIFT}`}\n          name={OPENSHIFT}\n          value={OPENSHIFT}\n          aria-label={OPENSHIFT}\n          onChange={handleChange}\n          isChecked={selectedEnv === OPENSHIFT}\n        />\n        <Radio\n          label=\"EKS\"\n          id={`radio-environment-${EKS}`}\n          name={EKS}\n          value={EKS}\n          aria-label={EKS}\n          onChange={handleChange}\n          isChecked={selectedEnv === EKS}\n        />\n        <Radio\n          label=\"AKS\"\n          id={`radio-environment-${AKS}`}\n          name={AKS}\n          value={AKS}\n          aria-label={AKS}\n          onChange={handleChange}\n          isChecked={selectedEnv === AKS}\n        />\n        <Radio\n          label=\"GKE\"\n          id={`radio-environment-${GKE}`}\n          name={GKE}\n          value={GKE}\n          aria-label={GKE}\n          onChange={handleChange}\n          isChecked={selectedEnv === GKE}\n        />\n      </StackItem>\n      <StackItem>\n        {selectedEnv && (\n          <>\n            <TextContent>\n              <Text component={TextVariants.h3}>\n                Select your installation method\n              </Text>\n            </TextContent>\n            <Select\n              variant=\"single\"\n              isOpen={isSelectOpen}\n              onToggle={onToggleSelect}\n              selections={selectedInstallation}\n              onSelect={onInstallationMethodSelect}\n              aria-label=\"Select your installation method\"\n              menuAppendTo={document.getElementById(WIZARD_ID)}\n            >\n              {options}\n            </Select>\n          </>\n        )}\n      </StackItem>\n    </Stack>\n  );\n};\n\nexport default InstallOptions;\n","import React from 'react';\nimport {\n  Card,\n  Flex,\n  FlexItem,\n  Grid,\n  GridItem,\n  Stack,\n  StackItem,\n  Title,\n} from '@patternfly/react-core';\n\nimport HeaderExternalLink from './HeaderExternalLink';\n\nconst Finish = () => {\n  return (\n    <div>\n      <Stack hasGutter>\n        <StackItem>\n          <Flex justifyContent={{ default: 'justifyContentSpaceBetween' }}>\n            <FlexItem>\n              <Title headingLevel=\"h1\">Finishing Up</Title>\n            </FlexItem>\n            <FlexItem>\n              <HeaderExternalLink />\n            </FlexItem>\n          </Flex>\n        </StackItem>\n        <StackItem>\n          <Title headingLevel=\"h4\">Watch a deep dive demo</Title>\n        </StackItem>\n        <StackItem>\n          <Grid hasGutter>\n            <GridItem md={9} xl2={7}>\n              <Card className=\"marketing-video\">\n                <iframe\n                  src=\"https://www.youtube.com/embed/lFBFW3HmgsA\"\n                  title=\"Advanced Cluster Security in 2 Minutes\"\n                  frameBorder=\"0\"\n                  allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                  allowFullScreen\n                ></iframe>\n              </Card>\n            </GridItem>\n          </Grid>\n        </StackItem>\n      </Stack>\n    </div>\n  );\n};\n\nexport default Finish;\n","import React from 'react';\nimport {\n  Button,\n  ClipboardCopy,\n  ClipboardCopyButton,\n  CodeBlock,\n  CodeBlockAction,\n  CodeBlockCode,\n  ExpandableSection,\n  Flex,\n  FlexItem,\n  List,\n  ListComponent,\n  ListItem,\n  OrderType,\n  Stack,\n  StackItem,\n  Title,\n} from '@patternfly/react-core';\n\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\n\nimport centralEndpointImage from '../../../assets/central_api_endpoint.png';\nimport clusterInitBundleImage from '../../../assets/cluster_init_bundle.png';\nimport HeaderExternalLink from './HeaderExternalLink';\n\nconst InstallWithHelm = () => {\n  const [copied, setCopied] = React.useState(false);\n  const [initBundleImageExpanded, setInitBundleImageExpanded] =\n    React.useState(false);\n  const [apiEndpointImageExpanded, setApiEndpointImageExpanded] =\n    React.useState(false);\n\n  const clipboardCopyFunc = (event, text) => {\n    navigator.clipboard.writeText(text.toString());\n  };\n\n  const onCodeBlockCopy = (event, text) => {\n    clipboardCopyFunc(event, text);\n    setCopied(true);\n  };\n\n  const onToggleInitBundleImage = (isExpanded) => {\n    setInitBundleImageExpanded(isExpanded);\n  };\n\n  const onToggleApiEndpointImage = (isExpanded) => {\n    setApiEndpointImageExpanded(isExpanded);\n  };\n\n  const codeBlock =\n    `helm install rhacs-secured-cluster-services rhacs/secured-cluster-services -n stackrox \\\\ \\n` +\n    `-f <path_to_cluster_init_bundle.yaml> \\\\ \\n` +\n    `--set clusterName=<name_of_the_secured_cluster> \\\\ \\n` +\n    `--set centralEndpoint=<endpoint_of_central_service> \\\\ \\n` +\n    `--set imagePullSecrets.username=<your redhat.com username> \\\\ \\n` +\n    `--set imagePullSecrets.password=<your redhat.com password>`;\n\n  const actions = (\n    <React.Fragment>\n      <CodeBlockAction>\n        <ClipboardCopyButton\n          textId=\"code-content\"\n          aria-label=\"Copy to clipboard\"\n          onClick={(e) => onCodeBlockCopy(e, codeBlock)}\n          exitDelay={copied ? 1500 : 600}\n          variant=\"plain\"\n          onTooltipHidden={() => setCopied(false)}\n        >\n          {copied ? 'Copied' : 'Copy'}\n        </ClipboardCopyButton>\n      </CodeBlockAction>\n    </React.Fragment>\n  );\n\n  return (\n    <Stack hasGutter>\n      <StackItem>\n        <Flex justifyContent={{ default: 'justifyContentSpaceBetween' }}>\n          <FlexItem>\n            <Title headingLevel=\"h1\">Install with an Helm</Title>\n          </FlexItem>\n          <FlexItem>\n            <HeaderExternalLink />\n          </FlexItem>\n        </Flex>\n      </StackItem>\n      <StackItem>\n        <div>\n          <span className=\"pf-u-font-weight-bold\">Prerequisites</span>\n        </div>\n        <div>\n          You must have access to the Red Hat Container Registry. For\n          information about downloading images from registry.redhat.io, see{' '}\n          <Button\n            variant=\"link\"\n            icon={<ExternalLinkAltIcon />}\n            iconPosition=\"right\"\n            isInline\n            href=\"https://access.redhat.com/RegistryAuthentication\"\n            target=\"_blank\"\n            component=\"a\"\n            aria-label=\"Red Hat Container Registry Authentication\"\n          >\n            Red Hat Container Registry Authentication.\n          </Button>\n        </div>\n      </StackItem>\n      <StackItem>\n        <div>You must also have:</div>\n        <div className=\"pf-u-ml-xl\">\n          <div>A command line interface environment (CLI) with:</div>\n          <div>\n            Access to the target Kubernetes cluster without RHACS installed\n            previously\n          </div>\n          <div>\n            Admin access to K8s Cluster you with to install (kubeconfig)\n          </div>\n          <div>Helm CLI installed in the same environment</div>\n        </div>\n      </StackItem>\n      <StackItem>\n        <List component={ListComponent.ol} type={OrderType.number}>\n          <ListItem>\n            In the ACS UI, from the menu on the left, go to Platform\n            Configuration -{'>'} Integrations and scroll down to{' '}\n            <span className=\"pf-u-font-weight-bold\">Cluster Init Bundle</span>.\n            <ExpandableSection\n              toggleText={'Show me where'}\n              onToggle={onToggleInitBundleImage}\n              isExpanded={initBundleImageExpanded}\n            >\n              <img\n                className=\"getting-started-image\"\n                src={clusterInitBundleImage}\n              />\n            </ExpandableSection>\n          </ListItem>\n          <ListItem>\n            Generate a new cluster init bundle and download the resulting YAML\n            file.\n          </ListItem>\n          <ListItem>\n            Use the Helm installation method to create the Secured Cluster\n            services. Supply the created cluster init bundle, a unique cluster\n            name, and the centralEndpoint, which is the URI (including port) of\n            your ACS instance. This URI is listed as{' '}\n            <span className=\"pf-u-font-weight-bold\">Central API Endpoint</span>{' '}\n            under{' '}\n            <span className=\"pf-u-font-weight-bold\">Instance Details</span>.\n            <ExpandableSection\n              toggleText={'Show me where'}\n              onToggle={onToggleApiEndpointImage}\n              isExpanded={apiEndpointImageExpanded}\n            >\n              <img\n                className=\"getting-started-image\"\n                src={centralEndpointImage}\n              />\n            </ExpandableSection>\n          </ListItem>\n          <ListItem>\n            Run the following Helm install command:\n            <CodeBlock actions={actions} className=\"pf-u-mt-sm\">\n              <CodeBlockCode id=\"code-content\">{codeBlock}</CodeBlockCode>\n            </CodeBlock>\n            <div className=\"pf-u-mt-sm\">\n              If this is the first time you’re using helm, you will need to add\n              the stackrox repo using the following commands:\n            </div>\n            <div className=\"pf-u-mt-sm\">\n              <ClipboardCopy\n                hoverTip=\"Copy\"\n                clickTip=\"Copied\"\n                variant=\"inline-compact\"\n                isCode\n                className=\"pf-u-my-sm\"\n              >\n                {`helm repo add stackrox https://mirror.openshift.com/pub/rhacs/charts`}\n              </ClipboardCopy>\n            </div>\n            <div className=\"pf-u-my-sm\">\n              <ClipboardCopy\n                hoverTip=\"Copy\"\n                clickTip=\"Copied\"\n                variant=\"inline-compact\"\n                isCode\n                className=\"pf-u-my-sm\"\n              >\n                {`helm repo update`}\n              </ClipboardCopy>\n            </div>\n            <div>\n              For image pull secretes, there are better options for credentials\n              for registry.redhat.io, like a{' '}\n              <Button\n                variant=\"link\"\n                icon={<ExternalLinkAltIcon />}\n                iconPosition=\"right\"\n                isInline\n                href=\"https://access.redhat.com/terms-based-registry/#accounts\"\n                target=\"_blank\"\n                component=\"a\"\n                aria-label=\"registry service account\"\n              >\n                registry service account\n              </Button>\n            </div>\n          </ListItem>\n        </List>\n      </StackItem>\n    </Stack>\n  );\n};\n\nexport default InstallWithHelm;\n","import React from 'react';\nimport {\n  Button,\n  ClipboardCopy,\n  ExpandableSection,\n  Flex,\n  FlexItem,\n  List,\n  ListComponent,\n  ListItem,\n  OrderType,\n  Stack,\n  StackItem,\n  Title,\n} from '@patternfly/react-core';\n\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\n\nimport centralEndpointImage from '../../../assets/central_api_endpoint.png';\nimport clusterInitBundleImage from '../../../assets/cluster_init_bundle.png';\nimport HeaderExternalLink from './HeaderExternalLink';\n\nconst InstallWithOperator = () => {\n  const [initBundleImageExpanded, setInitBundleImageExpanded] =\n    React.useState(false);\n  const [apiEndpointImageExpanded, setApiEndpointImageExpanded] =\n    React.useState(false);\n\n  const onToggleInitBundleImage = (isExpanded) => {\n    setInitBundleImageExpanded(isExpanded);\n  };\n\n  const onToggleApiEndpointImage = (isExpanded) => {\n    setApiEndpointImageExpanded(isExpanded);\n  };\n\n  return (\n    <Stack hasGutter>\n      <StackItem>\n        <Flex justifyContent={{ default: 'justifyContentSpaceBetween' }}>\n          <FlexItem>\n            <Title headingLevel=\"h1\">Install with an Operator</Title>\n          </FlexItem>\n          <FlexItem>\n            <HeaderExternalLink />\n          </FlexItem>\n        </Flex>\n      </StackItem>\n      <StackItem>\n        <List component={ListComponent.ol} type={OrderType.number}>\n          <ListItem>\n            Use the OpenShift console to{' '}\n            <Button\n              variant=\"link\"\n              icon={<ExternalLinkAltIcon />}\n              iconPosition=\"right\"\n              isInline\n              href=\"https://docs.openshift.com/acs/3.72/installing/install-ocp-operator.html\" // TODO: get updated documentation\n              target=\"_blank\"\n              component=\"a\"\n              aria-label=\"install the ACS Operator from Operator Hub\"\n            >\n              install the ACS Operator from Operator Hub\n            </Button>\n            . Create a new OCP project for ACS. A good name choice is{' '}\n            <span className=\"pf-u-font-weight-bold\">rhacs-operator</span>.\n          </ListItem>\n          <ListItem>\n            In the ACS UI, from the menu on the left, go to Platform\n            Configuration -{'>'} Integrations and scroll down to{' '}\n            <span className=\"pf-u-font-weight-bold\">Cluster Init Bundle</span>.\n            <ExpandableSection\n              toggleText={'Show me where'}\n              onToggle={onToggleInitBundleImage}\n              isExpanded={initBundleImageExpanded}\n            >\n              <img\n                className=\"getting-started-image\"\n                src={clusterInitBundleImage}\n              />\n            </ExpandableSection>\n          </ListItem>\n          <ListItem>\n            Generate a new cluster init bundle and download the resulting YAML\n            file. Also download the Kubernetes secrets file.\n          </ListItem>\n          <ListItem>\n            <div>\n              With the ACS project selected, create the init bundle secrets in\n              OCP by pasting the contents into the OCP console or by using the\n              command:\n            </div>\n            <ClipboardCopy\n              hoverTip=\"Copy\"\n              clickTip=\"Copied\"\n              variant=\"inline-compact\"\n              isCode\n              className=\"pf-u-my-sm\"\n            >\n              {`oc -n rhacs-operator create -f bundlename-cluster-init-secrets.yaml`}\n            </ClipboardCopy>\n          </ListItem>\n          <ListItem>\n            In the ACS Operator, install the Secured Cluster API into the ACS\n            project. Give your cluster a name and specify the Central Endpoint\n            with the Central API Endpoint (including port) from the ACS instance\n            details.\n            <ExpandableSection\n              toggleText={'Show me where'}\n              onToggle={onToggleApiEndpointImage}\n              isExpanded={apiEndpointImageExpanded}\n            >\n              <img\n                className=\"getting-started-image\"\n                src={centralEndpointImage}\n              />\n            </ExpandableSection>\n          </ListItem>\n        </List>\n      </StackItem>\n    </Stack>\n  );\n};\n\nexport default InstallWithOperator;\n","import React from 'react';\nimport {\n  Button,\n  Wizard,\n  WizardContextConsumer,\n  WizardFooter,\n} from '@patternfly/react-core';\n\nimport InitialSetup from './InitialSetup';\nimport InstallOptions from './InstallOptions';\nimport Finish from './Finish';\nimport InstallWithHelm from './InstallWithHelm';\nimport InstallWithOperator from './InstallWithOperator';\nimport AppLink from '../../../components/AppLink';\n\nconst INITIAL_SETUP = 'Initial Setup';\nconst OPTIONS = 'Options';\nconst INSTALLATION = 'Installation';\nconst FINISHING_UP = 'Finishing Up';\n\n// needed to append the select to on the InstallOptions page due to overlapping issues\nexport const WIZARD_ID = 'getting-started-wizard';\n\nconst GettingStartedWizard = () => {\n  const [selectedInstallation, setSelectedInstallation] = React.useState(null);\n  const [selectedEnv, setSelectedEnv] = React.useState(null);\n  const [stepIdReached, setStepIdReached] = React.useState(1);\n\n  const handleInstallationChange = (method) => {\n    setSelectedInstallation(method);\n  };\n\n  const handleSelectedEnvChange = (environment) => {\n    setSelectedEnv(environment);\n  };\n\n  const onCurrentStepChanged = ({ id }) => {\n    const step = id.replace(/\\D/g, '');\n    setStepIdReached(parseInt(step));\n  };\n\n  const resetForm = (goToStep) => {\n    setSelectedEnv(null);\n    setStepIdReached(1);\n    goToStep(INITIAL_SETUP);\n  };\n\n  const CustomFooter = (\n    <WizardFooter>\n      <WizardContextConsumer>\n        {({ activeStep, goToStepByName, onNext, onBack }) => {\n          if (activeStep.name !== FINISHING_UP) {\n            return (\n              <>\n                <Button\n                  className={\n                    activeStep.name === OPTIONS &&\n                    !selectedEnv &&\n                    !selectedInstallation\n                      ? 'pf-m-disabled'\n                      : ''\n                  }\n                  variant=\"primary\"\n                  type=\"submit\"\n                  onClick={onNext}\n                  aria-label=\"Next step\"\n                  id={`${activeStep.id}-next`}\n                >\n                  Next\n                </Button>\n                {activeStep.name !== INITIAL_SETUP && (\n                  <Button\n                    variant=\"secondary\"\n                    onClick={onBack}\n                    aria-label=\"Previous step\"\n                    id={`${activeStep.id}-back`}\n                  >\n                    Back\n                  </Button>\n                )}\n              </>\n            );\n          }\n          return (\n            <>\n              <Button\n                component={(props) => <AppLink {...props} to={'instances'} />}\n                aria-label=\"Finish\"\n              >\n                Finish\n              </Button>\n              <Button\n                variant=\"secondary\"\n                onClick={() => resetForm(goToStepByName)}\n                aria-label=\"Install another\"\n              >\n                Install Another\n              </Button>\n            </>\n          );\n        }}\n      </WizardContextConsumer>\n    </WizardFooter>\n  );\n\n  const steps = [\n    {\n      name: INITIAL_SETUP,\n      component: <InitialSetup />,\n      canJumpTo: stepIdReached === 1,\n      id: 'wizard-step-1',\n    },\n    {\n      name: OPTIONS,\n      component: (\n        <InstallOptions\n          selectedEnv={selectedEnv}\n          handleSelectedEnvChange={handleSelectedEnvChange}\n          selectedInstallation={selectedInstallation}\n          handleInstallationChange={handleInstallationChange}\n        />\n      ),\n      canJumpTo: stepIdReached === 2,\n      id: 'wizard-step-2',\n    },\n    {\n      name: INSTALLATION,\n      component:\n        selectedInstallation === 'operator' ? (\n          <InstallWithOperator />\n        ) : (\n          <InstallWithHelm />\n        ),\n      canJumpTo: stepIdReached === 3,\n      id: 'wizard-step-3',\n    },\n    {\n      name: FINISHING_UP,\n      component: <Finish />,\n      canJumpTo: stepIdReached === 4,\n      id: 'wizard-step-4',\n    },\n  ];\n\n  const title = 'getting started wizard';\n\n  return (\n    <Wizard\n      navAriaLabel={`${title} steps`}\n      mainAriaLabel={`${title} content`}\n      steps={steps}\n      id=\"getting-started-wizard\"\n      onCurrentStepChanged={onCurrentStepChanged}\n      footer={CustomFooter}\n    />\n  );\n};\n\nexport default GettingStartedWizard;\n","import React from 'react';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Button,\n  Flex,\n  FlexItem,\n  PageSection,\n  Text,\n  TextContent,\n  TextVariants,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\n\nimport BreadcrumbItemLink from '../../components/BreadcrumbItemLink';\nimport GettingStartedWizard from './Wizard/GettingStartedWizard';\n\nfunction GettingStartedPage() {\n  return (\n    <div>\n      <PageHeader>\n        <Flex direction={{ default: 'column' }}>\n          <FlexItem>\n            <Breadcrumb>\n              <BreadcrumbItemLink to=\"/overview\">ACS</BreadcrumbItemLink>\n              <BreadcrumbItem isActive>Get started with ACS</BreadcrumbItem>\n            </Breadcrumb>\n          </FlexItem>\n          <FlexItem>\n            <PageHeaderTitle title=\"Get started with Red Hat Advanced Cluster Security\" />\n          </FlexItem>\n          <FlexItem>\n            <TextContent>\n              <Text component={TextVariants.p}>\n                The solution helps improve the security of the application build\n                process, protects the application platform and configurations,\n                detects runtime issues, and facilitates response.{' '}\n                <Button\n                  variant=\"link\"\n                  icon={<ExternalLinkAltIcon />}\n                  iconPosition=\"right\"\n                  isInline\n                  href=\"https://docs.openshift.com/acs/3.74/welcome/index.html\"\n                  target=\"_blank\"\n                  component=\"a\"\n                  aria-label=\"Learn more about ACS\"\n                >\n                  Learn more about ACS\n                </Button>{' '}\n                or{' '}\n                <Button\n                  variant=\"link\"\n                  icon={<ExternalLinkAltIcon />}\n                  iconPosition=\"right\"\n                  isInline\n                  onClick={() => {\n                    window.open('mailto:acscs-feedback@redhat.com');\n                  }}\n                  aria-label=\"Email us\"\n                >\n                  Email us\n                </Button>\n              </Text>\n            </TextContent>\n          </FlexItem>\n        </Flex>\n      </PageHeader>\n      <PageSection>\n        <GettingStartedWizard />\n      </PageSection>\n    </div>\n  );\n}\n\nexport default GettingStartedPage;\n","import React from 'react';\nimport { Link, LinkProps } from 'react-router-dom';\nimport { linkBasename, mergeToBasename } from '../utils/paths';\n\nconst AppLink = (props: LinkProps) => (\n  <Link {...props} to={mergeToBasename(props.to, linkBasename)} />\n);\n\nexport default AppLink;\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}"],"names":["exports","tslib_1","React","__importStar","IconSize","size","sm","md","lg","xl","currentId","name","xOffset","yOffset","width","height","svgPath","_a","Component","constructor","super","arguments","this","id","render","props","color","title","noVerticalAlign","__rest","hasTitle","Boolean","heightWidth","baseAlign","Number","parseFloat","style","verticalAlign","viewBox","join","createElement","Object","assign","fill","role","d","displayName","defaultProps","_ref","children","to","rest","source","excluded","key","i","target","sourceKeys","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","_objectWithoutProperties","_excluded","BreadcrumbItem","_extends","_ref2","className","ariaCurrent","AppLink","Button","component","variant","icon","ExternalLinkAltIcon","iconPosition","isInline","href","Stack","hasGutter","StackItem","Flex","justifyContent","default","FlexItem","Title","headingLevel","HeaderExternalLink","Grid","GridItem","xl2","TextContent","Text","TextVariants","rel","List","ListComponent","type","OrderType","ListItem","OPENSHIFT","EKS","AKS","GKE","OPERATOR","HELM","selectedEnv","handleSelectedEnvChange","selectedInstallation","handleInstallationChange","_React$useState","_React$useState2","_slicedToArray","isSelectOpen","setIsSelectOpen","options","concat","_toConsumableArray","SelectOption","value","handleChange","_","e","Radio","label","onChange","isChecked","Select","isOpen","onToggle","prev","selections","onSelect","selection","menuAppendTo","document","getElementById","WIZARD_ID","Card","src","frameBorder","allow","allowFullScreen","copied","setCopied","_React$useState3","_React$useState4","initBundleImageExpanded","setInitBundleImageExpanded","_React$useState5","_React$useState6","apiEndpointImageExpanded","setApiEndpointImageExpanded","codeBlock","actions","CodeBlockAction","ClipboardCopyButton","textId","onClick","event","text","navigator","clipboard","writeText","toString","clipboardCopyFunc","exitDelay","onTooltipHidden","ExpandableSection","toggleText","isExpanded","clusterInitBundleImage","centralEndpointImage","CodeBlock","CodeBlockCode","ClipboardCopy","hoverTip","clickTip","isCode","INITIAL_SETUP","OPTIONS","FINISHING_UP","setSelectedInstallation","setSelectedEnv","stepIdReached","setStepIdReached","CustomFooter","WizardFooter","WizardContextConsumer","activeStep","goToStepByName","onNext","onBack","goToStep","steps","InitialSetup","canJumpTo","InstallOptions","environment","method","InstallWithOperator","InstallWithHelm","Finish","Wizard","navAriaLabel","mainAriaLabel","onCurrentStepChanged","step","replace","parseInt","footer","PageHeader","direction","Breadcrumb","BreadcrumbItemLink","isActive","PageHeaderTitle","window","open","PageSection","GettingStartedWizard","Link","_arrayLikeToArray","arr","len","arr2","Array","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","next","done","push","err","unsupportedIterableToArray","TypeError","arrayLikeToArray","iter","from","_unsupportedIterableToArray","o","minLen","n","slice","test"],"sourceRoot":""}